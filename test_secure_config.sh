#!/bin/bash
# TESTE DE CONFIGURA√á√ÉO SEGURA - VERS√ÉO ATUALIZADA
# Verifica se os arquivos est√£o usando vari√°veis corretamente

echo "üîç VERIFICANDO CONFIGURA√á√ÉO SEGURA"
echo "=================================="

# 1. Verificar se h√° senhas hardcoded nos arquivos (excluindo .env)
echo "1. Verificando senhas hardcoded..."
if find . -name "*.yml" -o -name "*.sh" -o -name "*.py" | xargs grep -l "Redis2025SecureAuth\|PgSql_2025_Sec\|Grafana2025AdminSecure\|django-secure-7k2m9vLqR8xN3bF6hJpT9wYzC4sG7kM0nB5vL3xR8qPmK" 2>/dev/null | grep -v ".env"; then
    echo "‚ùå ERRO: Ainda h√° senhas hardcoded nos arquivos!"
    echo "Arquivos com senhas:"
    find . -name "*.yml" -o -name "*.sh" -o -name "*.py" | xargs grep -l "Redis2025SecureAuth\|PgSql_2025_Sec\|Grafana2025AdminSecure" 2>/dev/null | grep -v ".env"
    exit 1
else
    echo "‚úÖ OK: Nenhuma senha hardcoded encontrada nos arquivos versionados"
fi

# 2. Verificar se .env tem as vari√°veis necess√°rias
echo ""
echo "2. Verificando vari√°veis no .env..."
VARS=("DB_PASSWORD" "REDIS_PASSWORD" "GRAFANA_ADMIN_PASSWORD" "GRAFANA_ADMIN_USER")
for var in "${VARS[@]}"; do
    if grep -q "^$var=" .env; then
        echo "‚úÖ $var encontrado"
    else
        echo "‚ùå $var N√ÉO encontrado!"
    fi
done

# 3. Verificar se arquivos usam ${} syntax
echo ""
echo "3. Verificando uso de vari√°veis..."
if grep -r '${.*}' docker-compose*.yml | grep -v ".env"; then
    echo "‚úÖ Vari√°veis de ambiente encontradas nos arquivos Docker"
else
    echo "‚ùå Nenhuma vari√°vel de ambiente encontrada!"
fi

# 4. Testar se docker-compose consegue ler as vari√°veis
echo ""
echo "4. Testando docker-compose config..."
if docker compose -f docker-compose.yml -f docker-compose.security.yml config > /dev/null 2>&1; then
    echo "‚úÖ Configura√ß√£o Docker v√°lida"
else
    echo "‚ùå ERRO na configura√ß√£o Docker!"
    exit 1
fi

echo ""
echo "‚úÖ Configura√ß√£o segura aplicada com sucesso!"
echo ""
echo "üìã PR√ìXIMOS PASSOS:"
echo "1. Testar o sistema: docker compose -f docker-compose.yml -f docker-compose.security.yml -f docker-compose.firewall.yml up -d"
echo "2. Verificar logs: docker compose logs"
echo "3. Adicionar ao Git: git add . && git commit -m 'Security: Remove all hardcoded passwords'"