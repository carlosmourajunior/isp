#!/bin/bash
# SCRIPT DE LIMPEZA DE MALWARE KINSING E SIMILARES
# Use apenas se malware for detectado

echo "üßπ SCRIPT DE LIMPEZA DE MALWARE"
echo "=============================="
echo "‚ö†Ô∏è ATEN√á√ÉO: Este script remove malware detectado"
echo "üìù Execute apenas se tiver certeza da presen√ßa de malware"
echo ""

read -p "Deseja continuar com a limpeza? (s/N): " CONFIRM
if [ "$CONFIRM" != "s" ] && [ "$CONFIRM" != "S" ]; then
    echo "Limpeza cancelada."
    exit 0
fi

echo ""
echo "üö® Iniciando limpeza de malware..."

# 1. Parar processos maliciosos
echo "1. üõë Parando processos maliciosos..."
pkill -f kinsing 2>/dev/null && echo "   ‚úÖ kinsing terminado"
pkill -f xmrig 2>/dev/null && echo "   ‚úÖ xmrig terminado"
pkill -f update.sh 2>/dev/null && echo "   ‚úÖ update.sh terminado"
pkill -f masscan 2>/dev/null && echo "   ‚úÖ masscan terminado"
pkill -f zgrab 2>/dev/null && echo "   ‚úÖ zgrab terminado"

# 2. Remover arquivos maliciosos
echo ""
echo "2. üóëÔ∏è Removendo arquivos maliciosos..."
MALICIOUS_FILES=(
    "/tmp/kinsing"
    "/tmp/kdevtmpfsi"
    "/tmp/update.sh"
    "/tmp/.systemd-resolve"
    "/var/tmp/kinsing"
    "/dev/shm/kinsing"
    "/usr/bin/kthreadd"
    "/usr/bin/bioset"
    "/tmp/masscan"
    "/tmp/zgrab"
    "/tmp/zmap"
    "/tmp/phpguard"
    "/tmp/.kinsing"
    "/tmp/.update.sh"
)

for file in "${MALICIOUS_FILES[@]}"; do
    if [ -f "$file" ]; then
        rm -f "$file" && echo "   ‚úÖ Removido: $file"
    fi
done

# 3. Limpar crontabs maliciosos
echo ""
echo "3. ‚è∞ Limpando crontabs maliciosos..."
for user in $(cut -f1 -d: /etc/passwd); do
    if crontab -u $user -l 2>/dev/null | grep -E "kinsing|update\.sh|masscan|xmrig"; then
        echo "   ‚ö†Ô∏è Crontab suspeito encontrado para usu√°rio: $user"
        echo "   üìù Removendo entradas maliciosas..."
        crontab -u $user -l | grep -v -E "kinsing|update\.sh|masscan|xmrig" | crontab -u $user -
        echo "   ‚úÖ Crontab limpo para: $user"
    fi
done

# 4. Limpar diret√≥rios tempor√°rios
echo ""
echo "4. üßπ Limpando diret√≥rios tempor√°rios..."
find /tmp -name "*kinsing*" -delete 2>/dev/null && echo "   ‚úÖ /tmp limpo"
find /var/tmp -name "*kinsing*" -delete 2>/dev/null && echo "   ‚úÖ /var/tmp limpo"
find /dev/shm -name "*kinsing*" -delete 2>/dev/null && echo "   ‚úÖ /dev/shm limpo"

# 5. Verificar e fechar portas expostas
echo ""
echo "5. üîí Verificando portas expostas..."
if netstat -tuln | grep ":5432.*0.0.0.0"; then
    echo "   ‚ö†Ô∏è PostgreSQL exposto - A√á√ÉO MANUAL NECESS√ÅRIA"
fi
if netstat -tuln | grep ":6379.*0.0.0.0"; then
    echo "   ‚ö†Ô∏è Redis exposto - A√á√ÉO MANUAL NECESS√ÅRIA"
fi

# 6. Reiniciar servi√ßos Docker se necess√°rio
echo ""
echo "6. üê≥ Reiniciando containers Docker..."
if command -v docker-compose &> /dev/null; then
    docker-compose restart 2>/dev/null && echo "   ‚úÖ Containers reiniciados"
elif command -v docker &> /dev/null && [ -f "docker-compose.yml" ]; then
    docker compose restart && echo "   ‚úÖ Containers reiniciados"
fi

echo ""
echo "‚úÖ Limpeza conclu√≠da!"
echo ""
echo "üìã PR√ìXIMOS PASSOS RECOMENDADOS:"
echo "1. Execute o script de verifica√ß√£o novamente"
echo "2. Monitore o sistema por algumas horas"
echo "3. Configure firewall se n√£o estiver ativo"
echo "4. Altere senhas de acesso"
echo "5. Atualize o sistema"
echo ""
echo "‚ö†Ô∏è Se o malware retornar, pode haver backdoors n√£o detectados"